@model ProjectX.ViewModels.Salon.SalonIndexViewModel

<div style="box-shadow: 0px 4px 10px rgba(10, 10, 10, 0.3); padding: 15px 25px 15px 25px;">
    <h1 class="mt-4 mb-3 text-center"><span class="projectx-title"><b>Project<span style="color: #FD7EBF; font-size: 50px; margin-right: 15px;">X</span>Salons</b></span></h1>

    @using (Html.BeginForm("Index", "Salons", FormMethod.Get, new { @class = "form-inline mt-3" }))
    {
        <div class="row">
            <div class="col-md-9">
                <div class="input-group mb-3">
                    <input type="text" class="form-control" name="searchQuery" placeholder="Search by Name or City" value="@ViewBag.SearchQuery">
                    <div class="input-group-append">
                        <button class="btn btn-primary col-md-12" type="submit" style="margin-left: 10px;">Search</button>
                    </div>
                </div>
            </div>
            <a asp-controller="Salons" asp-action="Create" class="btn btn-primary mb-3 col-md-2" style="margin-left: auto; margin-right: 14px; margin-top: 10px; height:40px;">Add Salon to ProjectX</a>
        </div>
    }

    <!-- Top 5 Cities Stripe -->
    <div class="row mt-3">
        <div class="col-md-12">
            <div class="custom-info-box">
                <div>
                    <strong style="margin: 10px;">Top 5 Cities with Salons:</strong>
                    @foreach (var city in Model.TopCities)
                    {
                        <a href="@Url.Action("Index", new { searchQuery = city })" class="badge badge-custom">@city</a>
                    }
                </div>
                <a href="@Url.Action("Index")" class="badge badge-custom show-all">Show All</a>
            </div>
        </div>
    </div>

    <div class="row pt-4 pb-3 mb-3">
        @foreach (var salon in Model.Salons)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                    <img src="@salon.ProfilePictureUrl" class="card-img-top" alt="Salon Profile Picture" style="object-fit: cover; height: 200px;">
                    <div class="card-body d-flex flex-column">
                        <h3 class="card-title">@salon.Name</h3>
                        <p class="card-text">@salon.Description</p>
                        <p class="card-text"><strong>Location:</strong> @salon.City, @salon.Address</p>
                        <div class="mt-auto">
                            <a asp-controller="Salons" asp-action="Details" asp-route-id="@salon.Id" class="btn btn-primary mt-auto">View Details</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-center">
            @if (Model.PaginationInfo.TotalPages > 1)
            {
                <li class="page-item @(Model.PaginationInfo.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link btn-custom" href="@Url.Action("Index", new { page = 1, searchQuery = ViewBag.SearchQuery })" style="color: #56C6E6;">First</a>
                </li>
                <li class="page-item @(Model.PaginationInfo.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link btn-custom" href="@Url.Action("Index", new { page = Model.PaginationInfo.CurrentPage - 1, searchQuery = ViewBag.SearchQuery })" style="color: #56C6E6;">Previous</a>
                </li>
                @for (int i = 1; i <= Model.PaginationInfo.TotalPages; i++)
                {
                    <li class="page-item @(Model.PaginationInfo.CurrentPage == i ? "active" : "")">
                        <a class="page-link btn-custom" href="@Url.Action("Index", new { page = i, searchQuery = ViewBag.SearchQuery })" style="color: #56C6E6;">@i</a>
                    </li>
                }
                <li class="page-item @(Model.PaginationInfo.CurrentPage == Model.PaginationInfo.TotalPages ? "disabled" : "")">
                    <a class="page-link btn-custom" href="@Url.Action("Index", new { page = Model.PaginationInfo.CurrentPage + 1, searchQuery = ViewBag.SearchQuery })" style="color: #56C6E6;">Next</a>
                </li>
                <li class="page-item @(Model.PaginationInfo.CurrentPage == Model.PaginationInfo.TotalPages ? "disabled" : "")">
                    <a class="page-link btn-custom" href="@Url.Action("Index", new { page = Model.PaginationInfo.TotalPages, searchQuery = ViewBag.SearchQuery })" style="color: #56C6E6;">Last</a>
                </li>
            }
        </ul>
    </nav>
</div>
